 ####################全局配置信息######################## 
 #######参数是进程级的，通常和操作系统（OS）相关######### 
global 
       maxconn 80000                   #默认最大连接数 
       log 127.0.0.1 local3            #[err warning info debug] 
       chroot /opt/tools/haproxy1.5.19 #chroot运行的路径 
       uid 500                          #所属运行的用户uid 
       gid 500                          #所属运行的用户组 
       daemon                          #以后台形式运行haproxy 
       nbproc 1                        #进程数量(可以设置多个进程提高性能) 
       pidfile /opt/tools/haproxy1.5.19/logs/haproxy.pid  #haproxy的pid存放路径,启动进程的用户必须有权限访问此文件 
       ulimit-n 65535                  #ulimit的数量限制 
       node ha1
       #debug  
       #quiet  
#####################默认的全局设置###################### 
##这些参数可以被利用配置到frontend，backend，listen组件##  
defaults  
       log global					   #应用全局的日志配置  
       mode http                       #所处理的类别 (#7层 http;4层tcp  ) 
       maxconn 20480                   #最大连接数 
       option httplog                  #日志类别http日志格式 
       option httpclose                #每次请求完毕后主动关闭http通道 
       option dontlognull              #不记录健康检查的日志信息 
       #option  forwardfor header Client-IP
       option forwardfor               #如果后端服务器需要获得客户端真实ip需要配置的参数，可以从Http Header中获得客户端ip  
       option redispatch               #serverId对应的服务器挂掉后,强制定向到其他健康的服务器  
       option abortonclose             #当服务器负载很高的时候，自动结束掉当前队列处理比较久的连接 
       stats refresh 30                #统计页面刷新间隔 
       retries 3                       #3次连接失败就认为服务不可用，也可以通过后面设置 
       balance roundrobin              #默认的负载均衡的方式,轮询方式 
      #balance source                  #默认的负载均衡的方式,类似nginx的ip_hash 
      #balance leastconn               #默认的负载均衡的方式,最小连接 
       contimeout 50000                 #连接超时 
       clitimeout 50000                #客户端超时 
       srvtimeout 50000                #服务器超时 
       timeout check 2000              #心跳检测超时 
       stats   uri     /haproxy-stats  #状态面板 
frontend http_80_in
        bind 0.0.0.0:81      #监听端口，即haproxy提供web服务的端口，和lvs的vip端口类似,*:80,0.0.0.0:80 

       option httplog       #启用http的log 
       option httpclose     #每次请求完毕后主动关闭http通道，HA-Proxy不支持keep-alive模式 
       option forwardfor    #如果后端服务器需要获得客户端的真实IP需要配置次参数，将可以从Http Header中获得客户端IP 
       ########acl策略配置############# 
		#hkms acl
		acl is_order_url path_end hkms_submit_order.htm
		#acl is_order_url path_end ajax_req.htm
		#acl is_order_url url_reg \/ajax_req\.htm\?act=submit_order
		#acl is_hkms_order_url path_end order_handle.htm
		#use_backend hkpt2 if is_order_url
		#use_backend hkpt3 if is_hkms_order_url
		#acl is_order_url path_end ajax_req.htm
		#acl is_order_url url_reg \/ajax_req\.htm\?act=submit_order
		#acl is_hkms_order_url path_end order_handle.htm
		#use_backend hkpt2 if is_order_url
		#use_backend hkpt3 if is_hkms_order_url

       acl itnihao_web hdr_reg(host) -i ^(www.itnihao.cn|ww1.itnihao.cn)$    
       #如果请求的域名满足正则表达式中的2个域名返回true -i是忽略大小写 
       acl itnihao_blog hdr_dom(host) -i blog.itnihao.cn 
       #如果请求的域名满足www.itnihao.cn返回true -i是忽略大小写 
       #acl itnihao    hdr(host) -i itnihao.cn 
       #如果请求的域名满足itnihao.cn返回true -i是忽略大小写 
       #acl file_req url_sub -i  killall= 
       #在请求url中包含killall=，则此控制策略返回true,否则为false 
       #acl dir_req url_dir -i allow 
       #在请求url中存在allow作为部分地址路径，则此控制策略返回true,否则返回false 
       #acl missing_cl hdr_cnt(Content-length) eq 0 
       #当请求的header中Content-length等于0时返回true 
 
       ########acl策略匹配相应############# 
       #block if missing_cl 
       #当请求中header中Content-length等于0阻止请求返回403 
       #block if !file_req || dir_req 
       #block表示阻止请求，返回403错误，当前表示如果不满足策略file_req，或者满足策略dir_req，则阻止请求 
       use_backend  server_web  if itnihao_web 
       #当满足itnihao_web的策略时使用server_web的backend 
       use_backend  server_blog if itnihao_blog 
       #当满足itnihao_blog的策略时使用server_blog的backend 
       #redirect prefix http://blog.itniaho.cn code 301 if itnihao 
       #当访问itnihao.cn的时候，用http的301挑转到http://192.168.16.3 
       default_backend hkpt1
       #以上都不满足的时候使用默认server_bbs的backend 

backend hkpt1
    balance static-rr
    cookie SERVERID insert nocache indirect
    option httpchk HEAD /t.txt HTTP/1.0
    cookie SERVERID
    option httpclose
    option forwardfor
    server Server1 127.0.0.1:80 cookie Server1 check inter 2000 rise 3 fall 3 maxconn 10 weight 4
    #server Server2 192.168.1.199:81 cookie Server2 check inter 2000 rise 3 fall 3 maxconn 1000 weight 3.5
    #server Server3 192.168.1.209:80 cookie Server3 check inter 2000 rise 3 fall 3 maxconn 1000 weight 2.5
    #server Server4 192.168.1.197:80 cookie Server4 check inter 2000 rise 3 fall 3 maxconn 500  weight 1

#backend hkpt2
#    log 127.0.0.1 local0
#    balance static-rr
#    cookie SERVERID insert nocache indirect
#    option httpchk HEAD /robots.txt HTTP/1.0
#    cookie SERVERID
#    option httpclose
#    option forwardfor
#    server Server5 192.168.1.198:80 cookie Server5 check inter 2000 rise 3 fall 3 maxconn 30 weight 4
#    server Server6 192.168.1.199:81 cookie Server6 check inter 2000 rise 3 fall 3 maxconn 30 weight 3.5
#    server Server7 192.168.1.209:80 cookie Server7 check inter 2000 rise 3 fall 3 maxconn 15 weight 2.5
#    #server Server8 192.168.1.197:80 cookie Server8 check inter 2000 rise 3 fall 3 maxconn 4 weight 1

#backend hkpt3
#    log 127.0.0.1 local0
#    balance static-rr
#    cookie SERVERID insert nocache indirect
#    option httpchk HEAD /robots.txt HTTP/1.0
#    cookie SERVERID
#    option httpclose
#    option forwardfor
#    server Server7 192.168.1.209:80 cookie Server7 check inter 2000 rise 3 fall 3 maxconn 48 weight 3.5




###########backend的设置############## 
##下面我将设置三组服务器 server_web，server_blog，server_bbs
############################backend server_web############################# 
#backend server_web 
#       mode http            #http的7层模式 
#       balance roundrobin   #负载均衡的方式，roundrobin平均方式 
#       cookie SERVERID      #允许插入serverid到cookie中，serverid后面可以定义 
#       option httpchk GET /index.html #心跳检测的文件 
#       server web1 192.168.16.2:80 cookie web1 check inter 1500 rise 3 fall 3 weight 1  
#       #服务器定义，cookie 1表示serverid为web1，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用， 
#       #fall 3是3次失败认为服务器不可用，weight代表权重 
#       server web2 192.168.16.3:80 cookie web2 check inter 1500 rise 3 fall 3 weight 2 
#       #服务器定义，cookie 1表示serverid为web2，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用， 
#       #fall 3是3次失败认为服务器不可用，weight代表权重 
# 
####################################backend server_blog############################################### 
#backend server_blog 
#       mode http            #http的7层模式 
#       balance roundrobin   #负载均衡的方式，roundrobin平均方式 
#       cookie SERVERID      #允许插入serverid到cookie中，serverid后面可以定义 
#       option httpchk GET /index.html #心跳检测的文件 
#       server blog1 192.168.16.2:80 cookie blog1 check inter 1500 rise 3 fall 3 weight 1  
#       #服务器定义，cookie 1表示serverid为web1，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重 
#       server blog2 192.168.16.3:80 cookie blog2 check inter 1500 rise 3 fall 3 weight 2 
#        #服务器定义，cookie 1表示serverid为web2，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重 
# 
####################################backend server_bbs############################################### 
# 
#backend server_bbs 
#       mode http            #http的7层模式 
#       balance roundrobin   #负载均衡的方式，roundrobin平均方式 
#       cookie SERVERID      #允许插入serverid到cookie中，serverid后面可以定义 
#       option httpchk GET /index.html #心跳检测的文件 
#       server bbs1 192.168.16.2:80 cookie bbs1 check inter 1500 rise 3 fall 3 weight 1  
#       #服务器定义，cookie 1表示serverid为web1，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重 
#       server bbs2 192.168.16.3:80 cookie bbs2 check inter 1500 rise 3 fall 3 weight 2 
#        #服务器定义，cookie 1表示serverid为web2，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重 
#
#

#
#listen admin_stat                   #status 
#    bind *:8090                     #监听端口 
#    mode http                       #http的7层模式 
#    stats refresh 30s               #统计页面自动刷新时间 
#    stats uri /haproxy-stats        #统计页面URL 
#    stats realm Haproxy\ Statistics #统计页面密码框上提示文本 
#    stats auth admin:admin          #统计页面用户名和密码设置 
#    stats hide-version              #隐藏统计页面上HAProxy的版本信息 
#    stats admin if TRUE             #手工启用/禁用,后端服务器 
#
