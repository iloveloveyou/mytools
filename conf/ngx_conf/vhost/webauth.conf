#test

upstream redis_sess_192.168.1.225:6378{
    server 192.168.1.225:6378;
    keepalive 1024 single;
}
upstream backend {
            drizzle_server 192.168.1.225:3301 dbname=webauth  charset=utf8
            password=123456 user=replication protocol=mysql ;
}
server
  {
   listen       80;
   server_name  webauth.server;
   index index.html index.htm index.php;
   root /opt/htdocs/SSC/webauth/www;
   #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
   #                   '$status $body_bytes_sent "$http_referer" '
   #                   '"$http_user_agent" "$http_x_forwarded_for"';
   #access_log logs/3ds.dev.log main;
   location /NginxStatus/ {
    stub_status on;
    access_log on;
   }

	rewrite "^(.*).auth$" $1;

   if (!-e $request_filename) {
	rewrite "/hub/login/?$" /hub/login.html$1 last;
	rewrite "(.*)([a|c|f])$" /static/login/$1$2/login.html last;
	rewrite "(.*)([a|c|f])/$" /static/login/$1$2/login.html last;
	rewrite "(.*)([a|c])/account/login.html$" /static/login/$1$2/login.html last;
	rewrite "(.*)f/user/login.html$" /static/login/$1f/login.html last;

	rewrite "(.*)([a|c|f])/mobi$" /static/mobiLogin/$1$2/login.html last;
	rewrite "(.*)([a|c|f])/mobi/index/$" /static/mobiLogin/$1$2/index.html last;
	rewrite "(.*)([a|c|f])/mobi/$" /static/mobiLogin/$1$2/login.html last;
	rewrite "(.*)f/mobi/user/login.html$" /static/mobiLogin/$1f/login.html last;

	rewrite "^/(.*)([a|c|f])_[0-9]+/(ssc|klc|pk)/(.*)$" /index.php?co=$1$2&r=account/$4&sysFlag=$3&shortFlag=$2 last;
	rewrite ".*f/(.*)$" /index.php?r=frontend/$1 last;
	rewrite ".*[a|c]/(.*)$" /index.php?r=backend/$1 last;
   }

# -- lua --------------start

	default_type 'text/plain';


 	set $luaPath "/opt/htdocs/SSC/webauth/protected/nginxlua/";



#============================================  auth/auth.lua
	location /hub/loginVerify/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_post_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
			 Auth:hubvCode();
		';
	}
#=============================================

	location /getCodeInfo/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_uri_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
			 Auth:getCodeInfo();
		';
	}

	location /getVcode/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_uri_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
			 Auth:vImg();
		';
	}


	location /loginVerify/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_post_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
			 Auth:vCode();
        ';
	}

	location /lgverify/ {
		 content_by_lua '
             ngx.req.read_body();
              local args = ngx.req.get_post_args();
	          local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
	          dofile(ngx.var.luaPath .. res.body .."auth.lua");
		      Auth:vCode(1);
	    ';
	}

	location /getLoginInfo/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_post_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
		     Auth:getLoginInfo();
		';
	}

	location /delLoginInfo/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_post_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
	         Auth:delLoginInfo();
		';
	}



	location /hub/getLoginInfo/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_post_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .. res.body .."auth.lua");
		     Auth:getHubLoginInfo();
		';
	}

	location /hub/delLoginInfo/ {
		 content_by_lua '
             ngx.req.read_body();
             local args = ngx.req.get_post_args();
		     local res = ngx.location.capture("/get-system-version/", { args = {systemversion = args.systemversion} })
		     dofile(ngx.var.luaPath .."auth.lua");
		     Auth:delHubLoginInfo();
		';
	}



        location /redisDoMuti/ {
        allow 127.0.0.1;
        deny all;
        set_unescape_uri $ip $arg_ip;
            set_unescape_uri $n $arg_n;
            set_unescape_uri $cmds $arg_cmds;
            redis2_next_upstream error timeout invalid_response;
            redis2_raw_queries $n $cmds;
            redis2_pass redis_sess_$ip;

        }


	location /query {
                allow 127.0.0.1;
                deny all;
		        set_by_lua $my_sql 'return ngx.unescape_uri(ngx.var.arg_sql);';	
                drizzle_query $my_sql;
 
	            drizzle_pass backend;
	            drizzle_module_header off;
		
		        #drizzle_connect_timeout    500ms; # default 60s
                #drizzle_send_query_timeout 2s;    # default 60s
                #drizzle_recv_cols_timeout  1s;    # default 60s
                #drizzle_recv_rows_timeout  1s;    # default 60s

	            rds_json on;
		
		        more_set_headers -s 504 'X-Mysql-Tid: $drizzle_thread_id';
            }

	location /kill {
                allow 127.0.0.1;
                deny all;
	            drizzle_query "kill query $arg_tid";
	            drizzle_pass backend;
	            rds_json on;
    	}
	 location /mysql-pool-status {
                allow 127.0.0.1;
                deny all;
 
                drizzle_status;
            }


       location /get-system-version {
            allow 127.0.0.1;
            deny all;
            content_by_lua '
                local args = ngx.req.get_uri_args();
                if args.systemversion == nil then
                    ngx.print("auth/");
                else
                    ngx.print("auth_V_"..args.systemversion.."/");
	            end
           ';
       }


# -- lua --------------end

  location ~ ^(.+\.php)(.*)$ {
      fastcgi_pass   127.0.0.1:9000;
      fastcgi_index  index.php;
      include fcgi.conf;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
      expires      30d;
    }

    location ~ .*\.(js|css|html)?$
    {
      expires 7d;
    }



  }

