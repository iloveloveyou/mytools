#fastcgi优化配置{{{
	fastcgi_temp_path /usr/local/openresty/nginx/fastcgi_temp 1 2;
	#需要注意的是fastcgi_cache缓存是先写在fastcgi_temp_path再移到fastcgi_cache_path，所以这两个目录最好在同一个分区，从0.8.9之后可以在不同的分区，不过还是建议放同一分区
	fastcgi_cache_path /usr/local/openresty/nginx/fastcgi_cache levels=1:2
        keys_zone=NGX_CGI_CACHE:100m inactive=10m
        inactive=5m;
	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 64k;
	fastcgi_buffers 128 64k;
	#默认值是fastcgi_buffers的两倍
	fastcgi_busy_buffers_size 128k;
	#写入缓存文件时使用多大的数据块，默认值是fastcgi_buffers的两倍
	fastcgi_temp_file_write_size 128k;
    #开启自定义错误页
	fastcgi_intercept_errors on;
    #error_page  500 502 503 504  /50x.html;
    #error_page 404 =http://www.server110.com/404.html
	
	#不缓存的情况
	#fastcgi_no_cache $cookie_nocache  $arg_nocache $arg_comment;
	#fastcgi_no_cache $http_pragma     $http_authorization;
	#fastcgi_cache_valid 200 302 1h;
	fastcgi_cache_valid 200 302 2s;
	fastcgi_cache_valid 301 1d;
	fastcgi_cache_valid  any 5m;
	#fastcgi出错时用旧缓存
	fastcgi_cache_use_stale error timeout invalid_header http_500;
	fastcgi_next_upstream error timeout invalid_header http_500 http_503;
	#The directive specifies the area which actually is the share memory's name for caching. The same area can be used in several places
#fastcgi_cache NGX_CGI_CACHE;
#fastcgi_cache_key "$scheme$request_method://$host$request_uri";
#}}}


upstream fastcgi_backend{
	#server 127.0.0.1:9000;
	server unix:/dev/shm/php-fpm.sock;
}
